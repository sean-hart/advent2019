package day1

import (
	"reflect"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestParseInputFile(t *testing.T) {
	expected := []int{1, 2, 3}
	actual := parseInputFile("testFile.txt")

	if !reflect.DeepEqual(expected, actual) {
		t.Error("Output not as expected")
	}
}

/*
	BenchmarkParseInputFile-8   	   38934	     30440 ns/op	    4272 B/op	       7 allocs/op
	PASS
	ok  	github.com/advent2019/asoni/day1	11.675s
*/
func BenchmarkParseInputFile(b *testing.B) {
	for i := 0; i < b.N; i++ {
		parseInputFile("testFile.txt")
	}
}

func TestCalculateFuel(t *testing.T) {
	testCases := []struct {
		input  int
		output int
	}{
		{
			input:  -1,
			output: -2,
		},
		{
			input:  0,
			output: -2,
		},
		{
			input:  1,
			output: -2,
		},
		{
			input:  3,
			output: -1,
		},
		{
			input:  6,
			output: 0,
		},
	}

	for i := range testCases {
		assert.Equal(t, testCases[i].output, calculateFuel(testCases[i].input))
	}
}

/*
	BenchmarkCalculateFuel-8   	1000000000	         0.570 ns/op	       0 B/op	       0 allocs/op
	PASS
	ok  	github.com/advent2019/asoni/day1	3.411s
*/
func BenchmarkCalculateFuel(b *testing.B) {
	testCase := 6
	for i := 0; i < b.N; i++ {
		calculateFuel(testCase)
	}
}

func TestDay1Part1(t *testing.T) {
	testCases := []struct {
		input  []int
		output int
	}{
		{
			input:  []int{12},
			output: 2,
		},
		{
			input:  []int{14},
			output: 2,
		},
		{
			input:  []int{1969},
			output: 654,
		},
		{
			input:  []int{100756},
			output: 33583,
		},
		{
			input:  []int{68936, 53526, 62556, 115539, 119659, 77887, 101443, 71392, 130327, 56769, 55083, 101448, 63985, 60433, 80302, 101264, 134416, 112047, 143310, 73842, 124020, 50346, 124192, 119547, 59351, 122161, 103742, 107648, 132879, 65047, 70234, 54569, 72785, 120259, 134533, 61778, 89183, 144270, 68600, 134849, 120221, 126887, 128483, 101293, 78066, 141762, 101929, 119173, 148580, 142710, 142029, 61303, 133204, 120872, 141111, 124900, 73600, 73552, 138183, 147019, 63157, 127712, 83610, 59098, 101675, 57951, 146696, 135604, 75158, 140629, 106125, 142451, 59468, 69078, 115676, 69763, 129999, 97987, 64654, 104168, 67894, 92675, 125475, 110450, 52738, 87569, 91939, 117714, 121018, 140534, 97876, 146651, 105741, 140417, 74771, 141727, 94957, 145126, 61429, 143890},
			output: 3406527,
		},
	}

	for i := range testCases {
		actualOutput := day1Part1(testCases[i].input)
		assert.Equal(t, testCases[i].output, actualOutput)
	}
}

/*
	BenchmarkDay1Part1-8   	 9528224	       124 ns/op	       0 B/op	       0 allocs/op
	PASS
	ok  	github.com/advent2019/asoni/day1	3.982s
*/
func BenchmarkDay1Part1(b *testing.B) {
	input := []int{68936, 53526, 62556, 115539, 119659, 77887, 101443, 71392, 130327, 56769, 55083, 101448, 63985, 60433, 80302, 101264, 134416, 112047, 143310, 73842, 124020, 50346, 124192, 119547, 59351, 122161, 103742, 107648, 132879, 65047, 70234, 54569, 72785, 120259, 134533, 61778, 89183, 144270, 68600, 134849, 120221, 126887, 128483, 101293, 78066, 141762, 101929, 119173, 148580, 142710, 142029, 61303, 133204, 120872, 141111, 124900, 73600, 73552, 138183, 147019, 63157, 127712, 83610, 59098, 101675, 57951, 146696, 135604, 75158, 140629, 106125, 142451, 59468, 69078, 115676, 69763, 129999, 97987, 64654, 104168, 67894, 92675, 125475, 110450, 52738, 87569, 91939, 117714, 121018, 140534, 97876, 146651, 105741, 140417, 74771, 141727, 94957, 145126, 61429, 143890}
	for i := 0; i < b.N; i++ {
		day1Part1(input)
	}
}

func TestDay1Part2(t *testing.T) {
	testCases := []struct {
		input  []int
		output int
	}{
		{
			input:  []int{14},
			output: 2,
		},
		{
			input:  []int{1969},
			output: 966,
		},
		{
			input:  []int{100756},
			output: 50346,
		},
		{
			input:  []int{68936, 53526, 62556, 115539, 119659, 77887, 101443, 71392, 130327, 56769, 55083, 101448, 63985, 60433, 80302, 101264, 134416, 112047, 143310, 73842, 124020, 50346, 124192, 119547, 59351, 122161, 103742, 107648, 132879, 65047, 70234, 54569, 72785, 120259, 134533, 61778, 89183, 144270, 68600, 134849, 120221, 126887, 128483, 101293, 78066, 141762, 101929, 119173, 148580, 142710, 142029, 61303, 133204, 120872, 141111, 124900, 73600, 73552, 138183, 147019, 63157, 127712, 83610, 59098, 101675, 57951, 146696, 135604, 75158, 140629, 106125, 142451, 59468, 69078, 115676, 69763, 129999, 97987, 64654, 104168, 67894, 92675, 125475, 110450, 52738, 87569, 91939, 117714, 121018, 140534, 97876, 146651, 105741, 140417, 74771, 141727, 94957, 145126, 61429, 143890},
			output: 5106932,
		},
	}

	for i := range testCases {
		actualOutput := day1Part2(testCases[i].input)
		assert.Equal(t, testCases[i].output, actualOutput)
	}
}

/*
	BenchmarkDay1Part2-8   	  776502	      1589 ns/op	       0 B/op	       0 allocs/op
	PASS
	ok  	github.com/advent2019/asoni/day1	1.298s
*/
func BenchmarkDay1Part2(b *testing.B) {
	input := []int{68936, 53526, 62556, 115539, 119659, 77887, 101443, 71392, 130327, 56769, 55083, 101448, 63985, 60433, 80302, 101264, 134416, 112047, 143310, 73842, 124020, 50346, 124192, 119547, 59351, 122161, 103742, 107648, 132879, 65047, 70234, 54569, 72785, 120259, 134533, 61778, 89183, 144270, 68600, 134849, 120221, 126887, 128483, 101293, 78066, 141762, 101929, 119173, 148580, 142710, 142029, 61303, 133204, 120872, 141111, 124900, 73600, 73552, 138183, 147019, 63157, 127712, 83610, 59098, 101675, 57951, 146696, 135604, 75158, 140629, 106125, 142451, 59468, 69078, 115676, 69763, 129999, 97987, 64654, 104168, 67894, 92675, 125475, 110450, 52738, 87569, 91939, 117714, 121018, 140534, 97876, 146651, 105741, 140417, 74771, 141727, 94957, 145126, 61429, 143890}
	for i := 0; i < b.N; i++ {
		day1Part2(input)
	}
}
